// launch.json
{
    // 使用 IntelliSense 了解相关属性。 
    // 悬停以查看现有属性的描述。
    // 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "name": "(gdb) Launch",                 // 配置名称，将会在启动配置的下拉菜单中显示
            "type": "cppdbg",                       // 配置类型，这里只能为cppdbg
            "request": "launch",                    // 请求配置类型，可以为launch（启动）或attach（附加）
            "targetArchitecture": "x64",            // 生成目标架构，一般为x86或x64，可以为x86, arm, arm64, mips, x64, amd64, x86_64
            "program": "${workspaceFolder}/build/main",               // 将要进行调试的程序的路径
            "args": ["para1", "para2"],                             // 程序调试时传递给程序的命令行参数，一般设为空即可
            "stopAtEntry": false,                   // 设为true时程序将暂停在程序入口处，一般设置为false
            "cwd": "${workspaceFolder}",            // 调试程序时的工作目录，一般为${workspaceRoot}即代码所在目录
            "environment": [],
            "externalConsole": false,                // 调试时是否显示控制台窗口，一般设置为true显示控制台
            "internalConsoleOptions": "neverOpen", // 如果不设为neverOpen，调试时会跳到“调试控制台”选项卡，新手调试用不到
            "windows": {       
                "MIMode": "gdb",
                "miDebuggerPath": "D:\\Software\\MinGW64\\bin\\gdb.exe",   // miDebugger的路径，注意这里要与MinGw的路径对应
            },
            "linux": {
                "MIMode": "gdb",
                "miDebuggerPath": "/usr/bin/gdb"
            },
            "preLaunchTask": "build",                      // 调试会话开始前执行的任务,与tasks.json中的label的值一样
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": false
                }
            ],
            
        }
    ]
}